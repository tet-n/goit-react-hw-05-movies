{"version":3,"file":"static/js/33.78df15f8.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Layout/Layout.styled.js","components/Layout/Layout.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/Loader/Loader.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","components/Actor/Actor.styled.js","components/Actor/Actor.jsx","components/ReviewItem/ReviewItem.styled.jsx","components/ReviewItem/ReviewItem.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-style: italic;\r\n  color: white;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchCast } from 'services/movieAPI/movieAPI';\r\nimport { Actor } from 'components';\r\nimport { Info, List } from './Cast.styled';\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCast(movieId).then(setCast).catch(console.log);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {cast.length ? (\r\n        <List>\r\n          {cast.map(actorInfo => (\r\n            <Actor key={actorInfo.id} {...actorInfo} />\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Info>There are not information about movie cast </Info>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 16px;\r\n  padding: ${props => {\r\n    return props.padding && props.theme.spacing(5, 4);\r\n  }};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  position: sticky;\r\n  top: 0;\r\n  padding: 10px;\r\n  z-index: 2;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  display: flex;\r\n  align-items: baseline;\r\n  gap: 30px;\r\n\r\n  font-size: ${props => props.theme.fontSizes.medium};\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  padding: ${props => props.theme.spacing(2, 0)};\r\n  transition: text-decoration 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\r\n\r\n  :hover,\r\n  :focus {\r\n    text-decoration: underline overline #188064;\r\n    text-underline-offset: 8px;\r\n  }\r\n\r\n  &.active {\r\n    font-size: ${props => props.theme.fontSizes.large};\r\n    color: #28b48f;\r\n  }\r\n`;\r\n","import { Suspense } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { Container, Header, Nav, StyledLink } from './Layout.styled';\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Container>\r\n          <Nav>\r\n            <StyledLink to=\"/\">Home</StyledLink>\r\n            <StyledLink to=\"/movies\">Movies</StyledLink>\r\n          </Nav>\r\n        </Container>\r\n      </Header>\r\n      <main>\r\n        <Container padding>\r\n          <Suspense fallback={<div>Please wait. We are in a process...</div>}>\r\n            <Outlet />\r\n          </Suspense>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${props => props.theme.spacing(7)};\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-style: italic;\r\n  color: white;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchReviews } from 'services/movieAPI/movieAPI';\r\nimport { ReviewItem } from 'components';\r\nimport { Info, List } from './Reviews.styled';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchReviews(movieId)\r\n      .then(data => {\r\n        setReviews(data);\r\n      })\r\n      .catch(console.log);\r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n      {reviews.length ? (\r\n        <List>\r\n          {reviews.map(review => (\r\n            <ReviewItem key={review.id} {...review} />\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Info>There are not any reviews for this movie yet </Info>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import { TailSpin } from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Loader = ({ visible }) => {\r\n  return (\r\n    <TailSpin\r\n      height=\"60\"\r\n      width=\"60\"\r\n      color=\"#23aa6b\"\r\n      ariaLabel=\"tail-spin-loading\"\r\n      radius=\"1\"\r\n      wrapperStyle={{ margin: '0 auto' }}\r\n      visible={visible}\r\n    />\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Loader;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const OutsideWrap = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  padding: 24px;\r\n  background-color: ${props => props.theme.colors.darkGrey};\r\n  border: 1px solid ${props => props.theme.colors.green};\r\n  border-radius: 12px;\r\n`;\r\n\r\nexport const ImgWrap = styled.div`\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 300px;\r\n  height: 400px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const InsideWrap = styled.div`\r\n  font-size: 16px;\r\n  color: white;\r\n`;\r\n\r\nexport const MovieTitle = styled.h2`\r\n  margin-bottom: ${props => props.theme.spacing(4)};\r\n\r\n  font-size: 32px;\r\n  color: ${props => props.theme.colors.white};\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  color: ${props => props.theme.colors.active};\r\n`;\r\n\r\nexport const SubTitle = styled.h3`\r\n  margin-top: 16px;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  gap: 8px;\r\n  color: ${props => props.theme.colors.active};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  Img,\r\n  ImgWrap,\r\n  InsideWrap,\r\n  List,\r\n  MovieTitle,\r\n  OutsideWrap,\r\n  Span,\r\n  SubTitle,\r\n} from './Movie.styled';\r\n\r\nconst Movie = ({ movieData }) => {\r\n  return (\r\n    <>\r\n      <OutsideWrap>\r\n        <ImgWrap>\r\n          <Img src={movieData.src} alt={movieData.title} />\r\n        </ImgWrap>\r\n        <InsideWrap>\r\n          <MovieTitle>{movieData.title}</MovieTitle>\r\n          <div>\r\n            <p>\r\n              User score: <Span>{movieData.userScore}%</Span>\r\n            </p>\r\n            <SubTitle>Overview</SubTitle>\r\n            <p>{movieData.overview}</p>\r\n            <SubTitle>Genres</SubTitle>\r\n            <List>{movieData.genresList}</List>\r\n          </div>\r\n        </InsideWrap>\r\n      </OutsideWrap>\r\n    </>\r\n  );\r\n};\r\n\r\nMovie.propTypes = {\r\n  movieData: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    src: PropTypes.string.isRequired,\r\n    userScore: PropTypes.number.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    genresList: PropTypes.array.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\n\r\nconst afterElementStyles = css`\r\n  content: '';\r\n  display: block;\r\n  width: 16%;\r\n  height: 2px;\r\n  background-color: #2bc098;\r\n  margin-top: 8px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:not(:last-child)::after {\r\n    ${afterElementStyles}\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  margin-bottom: 8px;\r\n\r\n  width: 200px;\r\n  height: 300px;\r\n  object-fit: cover;\r\n  border-radius: 12px;\r\n`;\r\n\r\nexport const Name = styled.h3`\r\n  margin-bottom: 4px;\r\n\r\n  font-size: 20px;\r\n  color: ${props => props.theme.colors.white};\r\n`;\r\n\r\nexport const Character = styled.p`\r\n  font-style: italic;\r\n  color: ${props => props.theme.colors.active};\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Character, Img, Item, Name } from './Actor.styled';\r\n\r\nconst Actor = ({ name, character, src }) => {\r\n  return (\r\n    <Item>\r\n      <Img src={src} alt={name} />\r\n      <Name>{name}</Name>\r\n      <Character>{character}</Character>\r\n    </Item>\r\n  );\r\n};\r\n\r\nActor.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  character: PropTypes.string.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Actor;\r\n","import styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { BsPersonVideo2 } from 'react-icons/bs';\r\n\r\nconst afterElementStyles = css`\r\n  content: '';\r\n  display: block;\r\n  width: 16%;\r\n  height: 2px;\r\n  background-color: #188064;\r\n  margin-top: 8px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:not(:last-child)::after {\r\n    ${afterElementStyles}\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-bottom: 8px;\r\n`;\r\nexport const StyledIcon = styled(BsPersonVideo2)`\r\n  color: ${props => props.theme.colors.active};\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  color: ${props => props.theme.colors.active};\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  color: ${props => props.theme.colors.lightGrey};\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Content, Item, StyledIcon, Title, Wrapper } from './ReviewItem.styled';\r\n\r\nconst ReviewItem = ({ author, content }) => {\r\n  return (\r\n    <Item>\r\n      <Wrapper>\r\n        <StyledIcon />\r\n        <Title>{author}</Title>\r\n      </Wrapper>\r\n      <Content>{content}</Content>\r\n    </Item>\r\n  );\r\n};\r\n\r\nReviewItem.propTypes = {\r\n  author: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ReviewItem;\r\n","import { Link, NavLink } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const LinkStyle = styled(Link)`\r\n  display: inline-block;\r\n  margin-bottom: 32px;\r\n  padding: 8px;\r\n\r\n  font-weight: 700;\r\n\r\n  background-color: #188064;\r\n  color: white;\r\n\r\n  border-radius: 4px;\r\n\r\n  transition: background-color 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98),\r\n    color 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: ${props => props.theme.colors.active};\r\n    color: ${props => props.theme.colors.grey};\r\n  }\r\n`;\r\n\r\nexport const Detail = styled.p`\r\n  margin-top: 28px;\r\n  margin-bottom: 14px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: ${props => props.theme.colors.white};\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const LinkList = styled.ul`\r\n  display: flex;\r\n  align-items: baseline;\r\n  gap: 12px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  font-size: 18px;\r\n  color: #ffffff;\r\n  text-decoration: underline #188064;\r\n\r\n  transition: transform 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\r\n\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.02);\r\n  }\r\n\r\n  &.active {\r\n    color: #28b48f;\r\n    font-size: 24px;\r\n  }\r\n`;\r\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\r\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\r\nimport { Loader, Movie } from 'components';\r\nimport { fetchMovie } from 'services/movieAPI/movieAPI';\r\nimport { Detail, LinkList, LinkStyle, StyledLink } from './MovieDetails.styled';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const location = useLocation();\r\n\r\n  const backUpLinkRef = useRef(location.state?.from ?? '/movies');\r\n\r\n  const [movieData, setMovieData] = useState(null);\r\n  const [showLoader, setShowLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setShowLoader(true);\r\n    fetchMovie(Number(movieId))\r\n      .then(setMovieData)\r\n      .catch(console.log)\r\n      .finally(() => setShowLoader(false));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <section>\r\n      <LinkStyle to={backUpLinkRef.current}>Back to</LinkStyle>\r\n      {showLoader && <Loader visible={showLoader} />}\r\n      {movieData && <Movie movieData={movieData} />}\r\n      <Detail>Additional information</Detail>\r\n      <LinkList>\r\n        <li>\r\n          <StyledLink to=\"cast\">Cast</StyledLink>\r\n        </li>\r\n        <li>\r\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\r\n        </li>\r\n      </LinkList>\r\n      <Suspense fallback={<div>Please wait. We are in a process...</div>}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"names":["List","styled","Info","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","catch","console","log","length","map","actorInfo","id","Container","props","padding","theme","spacing","Header","Nav","fontSizes","medium","StyledLink","NavLink","large","to","Suspense","fallback","reviews","setReviews","fetchReviews","data","review","visible","height","width","color","ariaLabel","radius","wrapperStyle","margin","OutsideWrap","colors","darkGrey","green","ImgWrap","Img","InsideWrap","MovieTitle","white","Span","active","SubTitle","movieData","src","alt","title","userScore","overview","genresList","afterElementStyles","css","Item","Name","Character","name","character","Wrapper","StyledIcon","BsPersonVideo2","Title","Content","lightGrey","author","content","LinkStyle","Link","grey","Detail","LinkList","location","useLocation","backUpLinkRef","useRef","state","from","setMovieData","showLoader","setShowLoader","fetchMovie","Number","finally","current"],"sourceRoot":""}