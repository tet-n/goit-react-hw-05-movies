{"version":3,"file":"static/js/875.98065104.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Layout/Layout.styled.js","components/Layout/Layout.jsx","components/Reviews/Reviews.jsx","components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.jsx","components/TrendingMovie/TrendingMovie.styled.js","components/TrendingMovie/TrendingMovie.jsx","components/Loader/Loader.jsx","components/Movie/Movie.jsx","components/Actor/Actor.jsx","components/ReviewItem/ReviewItem.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchCast } from 'services/fetchMovies/movieAPI';\r\nimport { Actor } from 'components';\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCast(movieId).then(setCast).catch(console.log);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {cast.length && (\r\n        <ul>\r\n          {cast.map(actorInfo => (\r\n            <Actor key={actorInfo.id} {...actorInfo} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 16px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  position: sticky;\r\n  top: 0;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  display: flex;\r\n  gap: 30px;\r\n`;\r\n","import { Suspense } from 'react';\r\nimport { Outlet, NavLink } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\nimport { Container, Header, Nav } from './Layout.styled';\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  padding: ${props => props.theme.spacing(2, 0)};\r\n\r\n  &.active {\r\n    color: #28b48f;\r\n  }\r\n`;\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Container>\r\n          <Nav>\r\n            <StyledLink to=\"/\">Home</StyledLink>\r\n            <StyledLink to=\"/movies\">Movies</StyledLink>\r\n          </Nav>\r\n        </Container>\r\n      </Header>\r\n      <main>\r\n        <Container>\r\n          <Suspense fallback={<div>Please wait. We are in a process...</div>}>\r\n            <Outlet />\r\n          </Suspense>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchReviews } from 'services/fetchMovies/movieAPI';\r\nimport { ReviewItem } from 'components';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchReviews(movieId)\r\n      .then(data => {\r\n        setReviews(data);\r\n      })\r\n      .catch(console.log);\r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n      {reviews.length ? (\r\n        <ul>\r\n          {reviews.map(review => (\r\n            <ReviewItem key={review.id} {...review} />\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>There are not any reviews for this movie yet </p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n`;\r\n","import { Loader, TrendingMovie } from 'components';\r\nimport { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTrendingMovies } from 'services/fetchMovies/movieAPI';\r\nimport { List } from './TrendingList.styled';\r\n\r\nconst TrendingList = () => {\r\n  const location = useLocation();\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n  const [showLoader, setShowLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setShowLoader(true);\r\n    fetchTrendingMovies()\r\n      .then(setTrendingMovies)\r\n      .catch(console.log)\r\n      .finally(() => setShowLoader(false));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Loader visible={showLoader} />\r\n      <List>\r\n        {trendingMovies.map(movie => (\r\n          <TrendingMovie key={movie.id} movie={movie} location={location} />\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrendingList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Item = styled.li`\r\n  /* list-style: square; */\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 250px;\r\n  object-fit: cover;\r\n`;\r\n","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Img, Item } from './TrendingMovie.styled';\r\n\r\nconst TrendingMovie = ({ movie, location }) => {\r\n  let title = movie?.title || movie?.name;\r\n  let src = movie.poster_path\r\n    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n    : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\r\n  if (title.length > 30) {\r\n    title = title.substring(0, 25) + '...';\r\n  }\r\n  return (\r\n    <Item>\r\n      <Link to={`movies/${movie.id.toString()}`} state={{ from: location }}>\r\n        <div style={{ objectFit: 'cover' }}>\r\n          <Img src={src} alt={title} />\r\n        </div>\r\n        <h2>{title}</h2>\r\n      </Link>\r\n    </Item>\r\n  );\r\n};\r\n\r\nTrendingMovie.propTypes = {\r\n  movie: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    name: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    poster_path: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  location: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default TrendingMovie;\r\n","import { TailSpin } from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Loader = ({ visible }) => {\r\n  return (\r\n    <TailSpin\r\n      height=\"60\"\r\n      width=\"60\"\r\n      color=\"#23aa6b\"\r\n      ariaLabel=\"tail-spin-loading\"\r\n      radius=\"1\"\r\n      wrapperStyle={{ margin: '0 auto' }}\r\n      visible={visible}\r\n    />\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Loader;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Movie = ({ movieData }) => {\r\n  const src = movieData.poster_path\r\n    ? `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`\r\n    : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\r\n  const userScore = Math.ceil(movieData.vote_average * 10);\r\n\r\n  const genres = movieData.genres.map(({ id, name }) => (\r\n    <li key={id}>{name}</li>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', gap: 30 }}>\r\n        <div>\r\n          <img src={src} alt={movieData.title} />\r\n        </div>\r\n        <div>\r\n          <h2>{movieData.title}</h2>\r\n          <p>User score: {userScore}%</p>\r\n          <h3>Overview</h3>\r\n          <p>{movieData.overview}</p>\r\n          <h3>Genres</h3>\r\n          <ul>{genres}</ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMovie.propTypes = {\r\n  movieData: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    poster_path: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Actor = ({ name, character, profile_path }) => {\r\n  const src = profile_path\r\n    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\r\n    : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\r\n  return (\r\n    <li>\r\n      <div>\r\n        <img src={src} alt={name} />\r\n      </div>\r\n      <h3>{name}</h3>\r\n      <p>{character}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nActor.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  character: PropTypes.string.isRequired,\r\n  profile_path: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Actor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ReviewItem = ({ author, content }) => {\r\n  return (\r\n    <li>\r\n      <h3>{author}</h3>\r\n      <p>{content}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nReviewItem.propTypes = {\r\n  author: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ReviewItem;\r\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","catch","console","log","length","map","actorInfo","id","Container","styled","Header","Nav","StyledLink","NavLink","props","theme","spacing","to","Suspense","fallback","reviews","setReviews","fetchReviews","data","review","List","location","useLocation","trendingMovies","setTrendingMovies","showLoader","setShowLoader","fetchTrendingMovies","finally","visible","movie","Item","Img","title","name","src","poster_path","substring","toString","state","from","style","objectFit","alt","height","width","color","ariaLabel","radius","wrapperStyle","margin","movieData","userScore","Math","ceil","vote_average","genres","display","gap","overview","character","profile_path","author","content"],"sourceRoot":""}